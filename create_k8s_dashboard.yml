---
- name: create k8s dashboard manifest
  template:
    src: k8s-dashboard.yaml.j2
    dest: /tmp/k8s-dashboard.yaml.j2

- name: start k8s dashboard
  shell: kubectl apply -f /tmp/k8s-dashboard.yaml.j2

- name: Creating a directory for the Dashboard certificates.
  file:
    path: /tmp/dashboard_cert
    state: directory

- name: Creating a Private Key for the Dashboard Certificate.
  openssl_privatekey:
    path: /tmp/dashboard_cert/dashboard.key

- name: Creating a CSR for the Dashboard Certificate.
  openssl_csr:
    path: /tmp/dashboard_cert/dashboard.csr
    privatekey_path: /tmp/dashboard_cert/dashboard.key
    common_name: kubernetes-dashboard

- name: Creating a Certificate for the Dashboard.
  openssl_certificate:
    path: /tmp/dashboard_cert/dashboard.crt
    privatekey_path: /tmp/dashboard_cert/dashboard.key
    csr_path: /tmp/dashboard_cert/dashboard.csr
    provider: selfsigned

- name: Removing the existing certificates Secret for the Dashboard.
  become: yes
  shell: kubectl delete secret -n kube-system kubernetes-dashboard-certs

- name: Creating a Secret to hold the Certificates.
  become: yes
  shell: kubectl create secret generic kubernetes-dashboard-certs --from-file=/tmp/dashboard_cert -n kube-system

- name: Deleting the existing Dashboard pod to reload the certificate.
  become: yes
  shell: kubectl delete pod -n kube-system -l k8s-app=kubernetes-dashboard

- name: Deleting the temporary Dashboard Certs directory.
  file:
    path: /tmp/dashboard_cert
    state: absent

- name: Waiting for the 180 seconds for deployment to be ready again.
  wait_for:
    timeout: 180
    msg: "Application was not available after 3 minutes. Something has probably gone wrong."

- name: look for a privileged token for full k8s dashboard access
  shell: kubectl -n kube-system get secret | grep namespace-controller-token | awk '{print $1}'
  register: privileged_token_output

- name: store privileged token for full k8s dashboard access
  shell: kubectl describe secret {{ privileged_token_output.stdout }} -n kube-system | grep "token:" | awk '{print $2}' > /root/k8s_dashboard_token.txt

- name: Echoing token to user.
  debug:
    msg: "Your Dashboard token can be found at /root/k8s_dashboard_token.txt"
